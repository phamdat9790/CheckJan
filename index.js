const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const cheerio = require("cheerio");

const token = process.env.BOT_TOKEN; 
const bot = new TelegramBot(token, { polling: true });

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const janCode = msg.text.trim();

  if (!/^\d{8,13}$/.test(janCode)) {
    return bot.sendMessage(chatId, "‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë√∫ng m√£ JAN (8-13 ch·ªØ s·ªë).");
  }

  bot.sendMessage(chatId, `üîé ƒêang t√¨m s·∫£n ph·∫©m v·ªõi m√£ JAN: ${janCode}... Vui l√≤ng ch·ªù.`);

  try {
    const result = await searchProductByJan(janCode);
    bot.sendMessage(chatId, result);
  } catch (err) {
    console.error(err);
    bot.sendMessage(chatId, "‚ùå L·ªói x·∫£y ra khi t√¨m ki·∫øm s·∫£n ph·∫©m.");
  }
});


async function searchProductByJan(janCode) {
  const results = [];
  let found = false;
  let text = "Null";

  for (let i = 1; i <= 4; i++) {
    const url = `https://www.mobile-ichiban.com/Prod/${i}`;
    const res = await axios.get(url);
    const $ = cheerio.load(res.data);

    $(".card-body .text-center").each((_, el) => {
      if (found) return; // N·∫øu ƒë√£ t√¨m th·∫•y th√¨ kh√¥ng x·ª≠ l√Ω ti·∫øp

      const item = $(el);
      text = item.text().trim();
      const janMatch = text.match(/JAN:(\d{8,13})/);

      if (janMatch) {
        const foundJanCode = janMatch[1];
        if (foundJanCode === janCode) {
          const name = item.find('label[data-original-title]').attr('data-original-title') || "Kh√¥ng c√≥ t√™n s·∫£n ph·∫©m";
          const price = item.find('.badge-warning').text().trim() || "Gi√° li√™n h·ªá";
          const relativeLink = item.find("a").attr("href") || "";
          const fullLink = "https://www.mobile-ichiban.com" + relativeLink;

          results.push(`‚úÖ T√¨m th·∫•y:\nüõí ${name}\nüí¥ ${price}\nüîó ${fullLink}`);
          found = true;
        }
      }
    });

    if (found) break; // Tho√°t kh·ªèi v√≤ng l·∫∑p sau khi t√¨m th·∫•y
  }

  if (results.length > 0) {
    return results.join("\n\n");
  } else {
    return "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o v·ªõi m√£ JAN n√†y." + text;
  }
}


